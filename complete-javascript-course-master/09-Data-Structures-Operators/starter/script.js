'use strict';

// –°–¢–†–û–ö–ò  PART 1==============================TODO
/*
const airLine = 'TAP Air Portugal';
const plane = 'A320';

console.log(plane[0]);
console.log(plane[1]);
console.log(plane[2]);
console.log('B737'[0]);

console.log(airLine.length);
console.log('B737'.length);

console.log(airLine.indexOf('r'));
console.log(airLine.lastIndexOf('r'));
console.log(airLine.indexOf('portugal'));

console.log(airLine.slice(4));
console.log(airLine.slice(4, 7));

console.log(airLine.slice(0, airLine.indexOf(' ')));
console.log(airLine.slice(airLine.lastIndexOf(' ') + 1));

console.log(airLine.slice(-2));
console.log(airLine.slice(1, -1));

const checkMiddleSeat = function (seat) {
  // B and E —Å—Ä–µ–¥–Ω–∏–µ –º–µ—Å—Ç–∞
  const s = seat.slice(-1);
  if (s === 'B' || s === 'E')
    console.log('–¢–≤–æ–µ–º –º–µ—Å—Ç–æ –ø–æ —Å–µ—Ä–µ–¥–∏–Ω–µ –æ–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏–∫–æ–º—É üòí');
  else console.log('–≠—Ç–æ —Ö–æ—Ä–æ—à–µ–µ –º–µ—Å—Ç–æüòä');
};

checkMiddleSeat('11B');
checkMiddleSeat('23C');
checkMiddleSeat('3E');

console.log(new String('jonas'));
console.log(typeof new String('jonas'));

console.log(typeof new String('jonas').slice(1));
*/
// –°–¢–†–û–ö–ò  PART 2==============================TODO
const airLine = 'TAP Air Portugal';

console.log(airLine.toLowerCase());
console.log(airLine.toUpperCase());

// –ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞
const passenger = 'jOnAS'; // Jonas
const passengerLower = passenger.toLocaleLowerCase();
const passengerCorrect =
  passengerLower[0].toUpperCase() + passengerLower.slice(1);
console.log(passengerCorrect);

//  –ü—Ä–æ–≤–µ—Ä—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á–∫—É (—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ)

const email = 'hello@jonas.io';
const loginEmail = '  Hello@Jonas.io \n';

// const lowerEmail = loginEmail.toLowerCase();
// const trimmedEmail = lowerEmail.trim();

const normalizedEmail = loginEmail.toLocaleLowerCase().trim();
console.log(normalizedEmail);
console.log(email === normalizedEmail);

// replacing
const priceGB = '228,97$';
const priceUS = priceGB.replace('$', 'R').replace(',', '.');
console.log(priceUS);

const announcement =
  '–í—Å–µ –ø–∞—Å—Å–∞–∂–∏—Ä—ã –ø–æ–¥—Ö–æ–¥—è—Ç –∫ –≤—ã—Ö–æ–¥—É –Ω–∞ –ø–æ—Å–∞–¥–∫—É 23. –≤—ã—Ö–æ–¥—É –Ω–∞ –ø–æ—Å–∞–¥–∫—É 23!';

console.log(announcement.replace('–≤—ã—Ö–æ–¥—É', '–≤—Ö–æ–¥—É'));
console.log(announcement.replaceAll('–≤—ã—Ö–æ–¥—É', '–≤—Ö–æ–¥—É'));

console.log(announcement.replaceAll(/–≤—ã—Ö–æ–¥—É/g, '–≤—Ö–æ–¥—É'));

// Bolleans
const plane = 'Airbus A320neo';
console.log(plane.includes('A320'));
console.log(plane.includes('Boeing'));
console.log(plane.startsWith('Air'));

if (plane.startsWith('Airbus') && plane.endsWith('neo')) {
  console.log('–ö—Ä—á —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–æ —É—Å–ª–æ–≤–∏–µ');
}

// –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç
const checkBaggage = function (items) {
  const baggage = items.toLowerCase();
  if (baggage.includes('knife') || baggage.includes('gun')) {
    console.log('You are NOT allowed on board');
  } else {
    console.log('Welcome aboard!');
  }
};
checkBaggage('I have a laptop, some Food and pocket Knife');
checkBaggage('Socks and camera');
checkBaggage('Get some snacks and a gun for protection');

/*
const weekdays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];

const openingHours = {
  [weekdays[3]]: {
    open: 12,
    close: 22,
  },
  [weekdays[4]]: {
    open: 11,
    close: 23,
  },
  [weekdays[5]]: {
    open: 0, // –æ—Ç–∫—Ä—ã—Ç 24 —á–∞—Å–∞
    close: 24,
  },
};

const restaurant = {
  name: 'Classico Italiano',
  location: 'Via Angelo Tavanti 23, Firenze, Italy',
  categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'],
  starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'],
  mainMenu: ['Pizza', 'Pasta', 'Risotto'],

  // es 6 —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã
  openingHours,

  order(starterIndex, mainIndex) {
    return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]];
  },

  orderDelivery({ starterIndex = 1, mainIndex = 0, time = '20:00', address }) {
    console.log(
      `–ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`
    );
  },

  orderPasta(ing1, ing2, ing3) {
    console.log(`–¢–≤–æ—è –≤–∫—É—Å–Ω–∞—è –ø–∞—Å—Ç –∏–∑ ${ing1}, ${ing2} –∏ ${ing3}`);
  },

  orderPizza(mainIngredient, ...otherIngredients) {
    console.log(mainIngredient);
    console.log(otherIngredients);
  },
};




//MAPS –∏—Ç–µ—Ä–∞—Ü–∏–∏ TODO
const question = new Map([
  ['question', '–ö–∞–∫–æ–π —Å–∞–º—ã–π –ª—É—á—à–∏–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –º–∏—Ä–µ?'],
  [1, 'C'],
  [2, 'Java'],
  [3, 'JavaScript'],
  ['correct', 3],
  [true, 'Correctüéâ'],
  [false, 'Try again!'],
]);
console.log(question);

// –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –≤ –∫–∞—Ä—Ç—ÉTODO
console.log(Object.entries(openingHours));
const hoursMap = new Map(Object.entries(openingHours));
console.log(hoursMap);

// –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞TODO
console.log(question.get('question'));
for (const [key, value] of question) {
  if (typeof key === 'number') console.log(`Answer ${key}: ${value}`);
}
const answer = 3;
console.log(question.get(question.get('correct') === answer));

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞—Ä—Ç—É –≤ –º–∞—Å—Å–∏–≤
console.log([...question]);
// console.log(question.entries());
console.log([...question.keys()]);
console.log([...question.values()]);

// MAP TODO 

const rest = new Map();
rest.set('name', 'Classico Italiano');
rest.set(1, 'Firenze, Italy');
console.log(rest.set(2, 'Lisbon, Portugal'));

rest
  .set('categories', ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'])
  .set('open', 11)
  .set('close', 23)
  .set(true, 'We are open')
  .set(false, 'We are closed :( ');

console.log(rest.get('name'));
console.log(rest.get(true));
console.log(rest.get(1));

const time = 21;
console.log(rest.get(time > rest.get('open') && time < rest.get('close')));

console.log(rest.has('categories'));
rest.delete(2);
// rest.clear();

const arr = [1, 2];
rest.set(arr, 'Test');
rest.set(document.querySelector('h1'), 'Heading');

console.log(rest);
console.log(rest.size);

console.log(rest.get(arr));


// –ú–ù–û–ñ–ï–¢–í–ê TODO

const ordersSet = new Set([
  'Pasta',
  'Pizza',
  'Pizza',
  'Risotto',
  'Pasta',
  'Pizza',
]);
console.log(ordersSet);

console.log(new Set('Jonas'));

console.log(ordersSet.size);
console.log(ordersSet.has('Pizza'));
console.log(ordersSet.has('Bread'));
ordersSet.add('Garlic Bread');
ordersSet.add('Garlic Bread');
ordersSet.delete('Risotto');
// ordersSet.clear();
console.log(ordersSet);

for (const order of ordersSet) console.log(order);

// –ü—Ä–∏–º–µ—Ä  TODO
const staff = ['Waiter', 'Chef', 'Waiter', 'Manager', 'Chef', 'Waiter'];
const staffUnique = [...new Set(staff)];
console.log(staffUnique);
console.log(
  new Set(['Waiter', 'Chef', 'Waiter', 'Manager', 'Chef', 'Waiter']).size
);

console.log(new Set('jonasschmedtmann').size);


// –ü–µ—Ä–±–æ—Ä —Ü–∏–∫–ª—ã –Ω–µ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–πTODO

// –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤TODO
const properties = Object.keys(openingHours);
console.log(properties);

let openStr = `–ú—ã –æ—Ç–∫—Ä—ã—Ç—ã ${properties.length} –¥–Ω—è:`;

for (const day of properties) {
  openStr += `${day}, `;
}

console.log(openStr);
// –ó–Ω–∞—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
const values = Object.values(openingHours);
console.log(values);

// –ó–∞—Ü—ã–∫–ª–∏–≤–∞–Ω–∏–µ –Ω–∞ –æ–±—ä–µ–∫—Ç—å–µ
const entries = Object.entries(openingHours);
// console.log(entries);

// [key, value]
for (const [day, { open, close }] of entries) {
  console.log(`–í ${day} –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ ${open} –∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –≤ ${close}`);
}


// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞
if (restaurant.openingHours.mon) console.log(restaurant.openingHours.mon.open);

// console.log(restaurant.openingHours.mon.open);

//–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞
console.log(restaurant.openingHours.mon?.open);
console.log(restaurant.openingHours?.mon?.open);

const days = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];

for (const day of days) {
  const open = restaurant.openingHours[day]?.open ?? 'closed';
  console.log(`On ${day}, we open at ${open}`);
}

// –º–µ—Ç–æ–¥—ã
console.log(restaurant.order?.(0, 1) ?? 'Method does not exist');
console.log(restaurant.orderRisotto?.(0, 1) ?? 'Method does not exist');

// –ú–∞—Å—Å–∏–≤—ã;

const users = [
  {
    name: 'Jonas',
    email: 'hello@jonas.io',
  },
];

// const users = [];

console.log(users[0]?.name ?? 'User array empty');
if (users.length > 0) console.log(users[0].name);
else console.log('User array empty');



// –¶–∏–∫–ª for of –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∫–∏ –º–∞—Å—Å–∏–≤–∞ 

const menu = [...restaurant.starterMenu, ...restaurant.mainMenu];

for (const item of menu) console.log(item);

for (const [i, el] of menu.entries()) {
  console.log(`${i + 1}: ${el}`);
}

// console.log(...menu.entries());

// –õ–æ–≥–∏—á—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ–±—ä–µ–¥–µ–Ω–µ–Ω–∏—è

const rest1 = {
  name: 'Capri',
  // numGuests: 20,
  numGuests: 0,
};

const rest2 = {
  name: 'La Piazza',
  owner: 'Giovanni Rossi',
};
// OR –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è
// rest1.numGuests = rest1.numGuests || 10;
// rest2.numGuests = rest2.numGuests || 10;
// rest1.numGuests ||= 10;
// rest2.numGuests ||= 10;

//  –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω—É–ª–µ–≤–æ–≥–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è ( null –∏–ª–∏ undefind)
rest1.numGuests ??= 10;
rest2.numGuests ??= 10;

// AND –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è
// rest1.owner = rest1.owner && '<ANONYMOUS>';
// rest2.owner = rest2.owner && '<ANONYMOUS>';
rest1.owner &&= '<ANONYMOUS>';
rest2.owner &&= '<ANONYMOUS>';

console.log(rest1);
console.log(rest2);

// –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã

// restaurant.numGuests = 0;
const guest = restaurant.numGuests || 10;
console.log(guest);

// –ù—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: null –∏ undefined (–Ω–µ 0 –∏–ª–∏ '')
const guestCorrect = restaurant.numGuests ?? 10;
console.log(guestCorrect);


console.log('--------- OR ----------');
// –õ—é–±–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ª—é–±–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö - –æ—Ü–µ–Ω–∫–∞ –∫–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è (–µ—Å–ª–∏ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å—Ç–µ–Ω–Ω–æ–µ –æ–Ω–æ –≤–µ—Ä–Ω–µ—Ç –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
// –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏
console.log(3 || 'Jonas');
console.log('' || 'Jonas');
console.log(true || 0);
console.log(undefined || null);

console.log(undefined || 0 || '' || 'Hello' || 23 || null);

restaurant.numGuests = 0;
const guest1 = restaurant.numGuests ? restaurant.numGuests : 10;
console.log(guest1);

const guest2 = restaurant.numGuests || 10;
console.log(guest2);

console.log('--------- AND ----------');
// –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏
console.log(0 && 'Jonas');
console.log(7 && 'Jonas');
console.log('hello' && 23 && null && 'Jonas');

//  –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ
if (restaurant.orderPizza) {
  restaurant.orderPizza('mushrooms', 'spinach');
}

restaurant.orderPizza && restaurant.orderPizza('mushrooms', 'spinach');
//

// 1) –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∏–µ
// —à–∞–±–ª–æ–Ω rest
// –†–∞–∑–≤–µ—Ä–Ω–∏, —Å –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ–ø—Ä–µ–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è
const arr = [1, 2, ...[3, 4]];

// REST , –ø–æ—Ç–º–æ—É —á—Ç–æ —Å –ª–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –∑–Ω–∞–∫ =
const [a, b, ...others] = [1, 2, 3, 4, 5];
console.log(a, b, others);

const [pizza, , risotto, ...otherFood] = [
  ...restaurant.mainMenu,
  ...restaurant.starterMenu,
];
console.log(pizza, risotto, otherFood);

// –û–ë–™–ï–ö–¢–´
const { sat, ...weekdays } = restaurant.openingHours;
console.log(weekdays);

// 2) –§—É–Ω–∫—Ü–∏–∏
const add = function (...numbers) {
  let sum = 0;
  for (let i = 0; i < numbers.length; i++) sum += numbers[i];
  console.log(sum);
};

add(2, 3);
add(5, 3, 7, 2);
add(8, 2, 5, 3, 2, 1, 4);

const x = [23, 5, 7];

add(...x);

restaurant.orderPizza('mushrooms', 'onion', 'spinach');
restaurant.orderPizza('mushrooms');


////////////////////////////////////////////////////////////
// –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
const arr = [7, 8, 9];
const badNewArr = [1, 2, arr[0], arr[1], arr[2]];
console.log(badNewArr);

const newArr = [1, 2, ...arr];
console.log(newArr);

console.log(...newArr);

const newMenu = [...restaurant.mainMenu, 'Gnocci'];
console.log(newMenu);

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
const mainMenuCopy = [...restaurant.mainMenu];

// –°–æ–µ–¥–µ–Ω–∏—Ç–µ 2 –º–∞—Å—Å–∏–≤–∞
const menu = [...restaurant.mainMenu, ...restaurant.starterMenu];
console.log(menu);

// –∏—Ç–µ—Ä–∞–≤—Ç–∏–≤–Ω—ã–π –æ–±—Ö–µ–∫—Ç—ã —ç—Ç–æ —Å—Ç—Ä–æ–∫–∏ –∫–∞—Ä—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –Ω–æ –Ω–µ –æ–±—ä–µ–∫—Ç—ã.

const str = 'Jonas';
const letters = [...str, ' ', 'S.'];
console.log(letters);
console.log(...str);
// console.log(`${...str} Schmedtman `);

const ingredients = [
  // prompt("let's make pasta! Ingridient 1?"),
  // prompt("let's make pasta! Ingridient 2?"),
  // prompt("let's make pasta! Ingridient 3?"),
];
console.log(ingredients);

restaurant.orderPasta(ingredients[0], ingredients[1], ingredients[2]);
restaurant.orderPasta(...ingredients);

// –æ–±—ä–µ–∫—Ç
const newRestaurant = { foundedIn: 1998, ...restaurant, founder: 'Guiseppe' };
console.log(newRestaurant);

const restaurantCopy = { ...restaurant };
restaurantCopy.name = 'Ristorante Roma';
console.log(restaurantCopy.name);
console.log(restaurant.name);


// –¥–µ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤

restaurant.orderDelivery({
  time: '22:30',
  address: 'Via del sole, 21',
  mainIndex: 2,
  starterIndex: 2,
});

restaurant.orderDelivery({
  address: 'Via del sole, 21',
  tarterIndex: 1,
});

const { name, openingHours, categories } = restaurant;
console.log(name, openingHours, categories);

const {
  name: restaurantName,
  openingHours: hours,
  categories: tags,
} = restaurant;
console.log(restaurantName, hours, tags);

const { menu = [], starterMenu: starters = [] } = restaurant;
console.log(menu, starters);

// –º—É—Ç–∏—Ä—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let a = 111;
let b = 999;
const obj = { a: 23, b: 7, c: 14 };
({ a, b } = obj);
console.log(a, b);

//  –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
const {
  fri: { open, close },
} = openingHours;
console.log(open, close);


const arr = [2, 3, 4];
const a = arr[0];
const b = arr[1];
const c = arr[2];

const [x, y, z] = arr;
console.log(x, y, z);
console.log(arr);

let [main, , secondary] = restaurant.categories;
console.log(main, secondary);

// –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
// const temp = main;
// main = secondary;
// secondary = temp;
// console.log(main, secondary);

[main, secondary] = [secondary, main];
console.log(main, secondary);

// –≤–æ–∑–≤—Ä–æ—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏
const [starter, mainCourse] = restaurant.order(2, 0);
console.log(starter, mainCourse);

// –í–ª–æ–∂–µ–Ω–Ω–æ–µ –¥–∏—Å–∫—Ä—É—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∏–µ
const nested = [2, 4, [5, 6]];
// const [i, , j] = nested;
// console.log(i, j);

const [i, , [j, k]] = nested;
console.log(i, j, k);

// —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const [p = 1, q = 1, r = 1] = [8];
console.log(p, q, r);
*/
